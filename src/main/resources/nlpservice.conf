include "application"

akka {
  actor {

//    provider = "akka.remote.RemoteActorRefProvider"

//    serializers {
//      java = "akka.serialization.JavaSerializer"
//      proto = "akka.remote.serialization.ProtobufSerializer"
//    }

    deployment {

      "/dataProcessor/textProActorPool" {
        router = round-robin-pool
        nr-of-instances = 4
      }

      "/dataProcessor/crimesExtractorPool" {
        router = round-robin-pool
        nr-of-instances = 5
      }

      "/dataProcessor/namedEntitiesFillerRouter" {
        router = round-robin-pool
        nr-of-instances = 5
      }

      "/dataProcessor/focusLocationExtractorRouter" {
        router = round-robin-pool
        nr-of-instances = 5
      }

      "/dataProcessor/analyzedNewsSaverRouter" {
        router = round-robin-pool
        nr-of-instances = 2
      }

      "/dataProcessor/elasticSearchIndexerRouter" {
        router = round-robin-pool
        nr-of-instances = 2
      }

//      "/receptionist/nlpController/textProActor" {
//        remote = "akka.tcp://TextProSystem@${textproHostname}:2552"
//      }
//
//      "/receptionist/controller/textProActorPool" {
//        router = round-robin-pool
//        nr-of-instances = 2
//        target.nodes = ["akka.tcp://TextProSystem@$:2552"]
//      }
    }
  }

//  remote {
//    netty.tcp {
//      hostname = "10.0.0.11"
//      port = 2554
//      send-buffer-size = 4096000b
//      receive-buffer-size = 4096000b
//      maximum-frame-size = 2048000b
//    }
//  }
}

nlpservice {
  mongo {
    host = "mongodb"
    port = 27017
    dbName = "wheretolive"
    username = "administrator"
    password = "michelangeloceci"
    crawledNews = "crawledNews"
    crimes = "crimes"
    analyzedNews = "analyzedNews"
    batchSize = 30
  }

  maxProcessingSize = 60
  //scheduling time in minutes
  scheduling.time = 60

  textproPath = "/data/TextPro1.5.2_Linux64bit"
  //textproPath = "/Users/fabiofumarola/TextPro1.5.2"
  //textproPath = "/home/fabiana/TextPro1.5.2"

  #the wait in seconds
  wait {
    call = 3
    timeout = 850
  }

  elasticsearch {
    host = "elastic1"
    clusterName = "wheretolive"
    port = 9300
    wheretolive.news = "wheretolive_v1/news"
    geodata.gfoss = "geodata/gfoss"
  }

  geocodingCache {
    url = "${geocodingCacheHostname}:8080"
  }

  scheduler {
    #scheduler time in minutes
    time = 60
  }
}